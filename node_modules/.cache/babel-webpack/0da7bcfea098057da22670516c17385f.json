{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Oksana/OneDrive - mediasparx.com/Desktop/main-work/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { deleteObject, getDownloadURL, percentage, ref, uploadBytesResumable } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport let ImageService = /*#__PURE__*/(() => {\n  class ImageService {\n    constructor(storage) {\n      this.storage = storage; //return % of file uploading\n\n      this.uploadPercent = 0;\n    } //loading image in firebase\n\n\n    uploadFile(folder, name, file) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const path = `${folder}/${name}`;\n        let url = '';\n\n        if (file) {\n          try {\n            const storageRef = ref(_this.storage, path);\n            const task = uploadBytesResumable(storageRef, file);\n            percentage(task).subscribe(data => {\n              _this.uploadPercent = data.progress;\n            });\n            yield task;\n            url = yield getDownloadURL(storageRef);\n          } catch (e) {\n            console.error(e);\n          }\n        } else {\n          console.log('wrong format');\n        }\n\n        return Promise.resolve(url);\n      })();\n    }\n\n    deleteUploadFile(imagePath) {\n      const task = ref(this.storage, imagePath);\n      return deleteObject(task);\n    }\n\n  }\n\n  ImageService.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n  };\n\n  ImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImageService;\n})();","map":null,"metadata":{},"sourceType":"module"}