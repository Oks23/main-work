{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ROLE } from 'src/app/shared/constants/role.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/shared/services/account/account.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthorizationComponent = /*#__PURE__*/(() => {\n  class AuthorizationComponent {\n    constructor(fb, accountService, router) {\n      this.fb = fb;\n      this.accountService = accountService;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.initAuthForm();\n    }\n\n    initAuthForm() {\n      this.authForm = this.fb.group({\n        email: [null, [Validators.required, Validators.email]],\n        password: [null, [Validators.required]]\n      });\n    }\n\n    login() {\n      this.accountService.login(this.authForm.value).subscribe(data => {\n        if (data && data.length > 0) {\n          const user = data[0];\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          this.accountService.isUserLogin$.next(true);\n\n          if (user && user.role === ROLE.USER) {\n            this.router.navigate(['/account']);\n          } else if (user && user.role === ROLE.ADMIN) {\n            this.router.navigate(['/admin']);\n          }\n        }\n      }, e => {\n        console.log(e);\n      });\n    }\n\n  }\n\n  AuthorizationComponent.ɵfac = function AuthorizationComponent_Factory(t) {\n    return new (t || AuthorizationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AuthorizationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthorizationComponent,\n    selectors: [[\"app-authorization\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[\"id\", \"authorForm\", 1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"col-lg-8\", \"col-xl-4\"], [1, \"was-validated\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\", \"is-invalid\"], [\"formControlName\", \"email\", \"name\", \"name\", \"type\", \"email\", \"id\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"path\", 1, \"form-label\", \"is-invalid\"], [\"formControlName\", \"password\", \"name\", \"path\", \"type\", \"password\", \"id\", \"path\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btns\", \"w-100\", 3, \"disabled\"]],\n    template: function AuthorizationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthorizationComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"\\u041B\\u043E\\u0433\\u0456\\u043D\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"label\", 6);\n        i0.ɵɵtext(9, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵtext(12, \" \\u0423\\u0432\\u0456\\u0439\\u0442\\u0438 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", ctx.authForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator],\n    styles: [\"#authorForm[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:16px;height:56px;border:1px solid #dcdcdc;border-radius:10px;color:#252525;line-height:56px;padding:0 20px 0 23px;transition:.35s;text-overflow:ellipsis;margin:15px 0;overflow:hidden}#authorForm[_ngcontent-%COMP%]{margin:150px 0}#authorForm[_ngcontent-%COMP%]   .btns[_ngcontent-%COMP%]{font-size:20px;border-radius:10px;border:2px solid #b5d8f7;background-color:#b5d8f7;transition:.35s;text-transform:uppercase;height:56px;cursor:pointer}#authorForm[_ngcontent-%COMP%]   .btns[_ngcontent-%COMP%]:hover{background-color:#fff}\"]\n  });\n  return AuthorizationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}